
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - Store
      - azure-pipelines.yml

stages:
- stage: build

  jobs:
  - job: build

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      buildConfiguration: 'Release'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 5 SDK'
      inputs:
        packageType: 'sdk'
        version: '5.0.100'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
      workingDirectory: Store/
    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        arguments: '--configuration $(buildConfiguration)'
        publishTestResults: true
        workingDirectory: 'Store'

    - script: dotnet publish --configuration $(buildConfiguration) --output publish
      displayName: 'dotnet publish $(buildConfiguration)'
      workingDirectory: Store/
      
    - publish: Store/publish
      artifact: app
      displayName: Publish Artifact App

- stage: sonarcloud
  jobs: 
  - job: testing
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      buildConfiguration: 'Release'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 2.x SDK'
      inputs:
        packageType: 'sdk'
        version: '2.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    - script: 'dotnet add package coverlet.msbuild'
      workingDirectory: Store/Store.Test

    - task: SonarCloudPrepare@1
      displayName: Sonar Prepare Analysis
      inputs:
        SonarCloud: 'Sonar-Cloud-dbarnes'
        organization: '2011-nov02-net'
        scannerMode: 'MSBuild'
        projectKey: '2011-nov02-net_david-project1'
        projectName: 'Project 1'
        extraProperties: |
          'sonar.exclusions=**/lib/**'
          sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
          sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
    - task: UseDotNet@2
      displayName: 'Use .NET 5 SDK'
      inputs:
        packageType: 'sdk'
        version: '5.0.100'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
      workingDirectory: Store/

    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        arguments: '--configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
        publishTestResults: true
        workingDirectory: 'Store'

    - task: SonarCloudAnalyze@1
      displayName: Sonar Run Analysis

    - task: SonarCloudPublish@1
      displayName: Sonar Analysis Publish Results
      inputs:
        pollingTimeoutSec: '300'


- stage: release
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: app_service
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: app
            displayName: download app

          - task: AzureRmWebAppDeployment@4
            displayName: Azure App Service Deploy
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure subscription 1 (b039e9a7-436a-45e5-9c21-b3c078fecd2c)'
              appType: 'webApp'
              WebAppName: 'Barnes-2011-ASPNET-Project1'
              packageForLinux: '$(Pipeline.Workspace)/app'